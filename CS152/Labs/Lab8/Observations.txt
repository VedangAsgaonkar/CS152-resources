1)just_a_demo_for_practice.cpp
  In presence of the assert, the code throws an Assertion i<n failed error, as the index i goes on to be equal to n.
  If we silence the assertion using the NDEBUG flag, then a segmentation fault occurs.
2)collection.cpp
  The constructor and methods have been implemented. Assert statements have been added to check for pre and post 
  conditions about capacity and final state of the Collection. 
  In main() the asserts of push_back and pop_back are violated by pushing more elements than capacity and removing more
  elements than cardinality. These throw assertion failed.
3)substring.cpp
  Assertions have been added regarding the length of the strings as well as the substring being found. The second call
  in main violates the latter assertion and so throws as assertion failed.
4)str2int.cpp
  Assertions have been added in a for loop to check if indeed the string represents an integer. The latter test case of 
  main fails this assertion.
5)funnyassert.cpp
  The code flows as normal if i==j. If the condition is false, the cases of switch get repeated, giving an error.
  Hence it is an implementation of an assert. Note that i and j must be made const.